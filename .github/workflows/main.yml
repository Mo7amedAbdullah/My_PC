name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Create ngrok tunnel
      run: .\ngrok\ngrok.exe tcp 3389

    - name: Install Norc Agent
      run: iwr -useb https://norc.io/install.ps1 | iex

    - name: Init Norc Agent
      run: |
        norc agent init --name "ci-agent"
        # تأكد أن readonly غير مفعل
        $agentConfigPath = "$env:USERPROFILE\.norc\agent.yaml"
        (Get-Content $agentConfigPath) -replace 'readonly: true', 'readonly: false' | Set-Content $agentConfigPath

    - name: Set RGB Binding
      run: norc agent bind --rgb-id $Env:RGB_ID
      env:
        RGB_ID: ${{ secrets.RGB_ID }}

    - name: Start Norc Agent
      run: norc agent start
